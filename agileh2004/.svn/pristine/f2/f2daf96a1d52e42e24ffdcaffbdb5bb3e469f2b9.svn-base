import java.io.File;
import java.net.URL;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.junit.After;
import org.junit.Before;
import org.testfx.api.FxToolkit;
import org.testfx.framework.junit5.ApplicationTest;

import application.EntryPoint;
import application.controller.MainUIController;
import javafx.fxml.FXMLLoader;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.input.KeyCode;
import javafx.scene.input.MouseButton;
import javafx.scene.layout.Pane;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.Shape;
import javafx.stage.Stage;

 public abstract class TestFXBase extends ApplicationTest{
	private static final String PATH_MAIN = "src/main/java/application/view/MainUI.fxml";
	public MainUIController mainController;
	@Before
	public void setUpClass() throws Exception {
		ApplicationTest.launch(EntryPoint.class);
	}

	@After
	public void afterEachTest() throws TimeoutException {
		FxToolkit.hideStage();
		release(new KeyCode[] {});
		release(new MouseButton[] {});
	}

	@Override
	public void start(Stage stage) {
		Pane root = new Pane();
		try {
			URL urlMain = new File(PATH_MAIN).toURI().toURL();
			FXMLLoader fxmlLoaderEntry = new FXMLLoader(urlMain);
			root.getChildren().add((Node) fxmlLoaderEntry.load());
			mainController = fxmlLoaderEntry.getController();

			root.prefHeight(600);
			root.prefWidth(800);
			Scene scene = new Scene(root);
			stage.setTitle("dDraw4Us");
			stage.setScene(scene);

			stage.show();

			stage.setOnHidden(e -> {
				mainController.getStateController().saveState();
			});

		} catch (Exception e) {
			Logger logger = Logger.getGlobal();
			logger.log(Level.SEVERE, "Exception");
		}
	}
	
	@SuppressWarnings("unchecked")
	public<T extends Node> T find(final String query) {
		return (T) lookup(query).queryAll().iterator().next();
	}
	
	public Shape drawShapeAndSelectIt() {
		clickOn("#roundedRectBtn");
		 
		moveBy(200, 50);
		
		drag();

		moveBy(50, 50);

		drop();

		clickOn("#cursorBtn");

		Shape shapeToSelect = mainController.getCanevasController().getAllShapes().get(0).getSingleShapeList().get(0).getShape();
		
		clickOn(shapeToSelect);
		
		return shapeToSelect;

	}
}
